---
- name: confluence | Create PostgreSQL user/database
  include_tasks: postgres.yml
  when: confluence_database_engine == "postgresql"
  tags:
    - postgres

- name: confluence | Create MySQL database
  include_tasks: mysql.yml
  when: confluence_database_engine == "mysql"
  tags:
    - mysql
- name: Check if file exists
  stat:
    path: "{{ ansible_env.PWD }}/minio-binaries/mc"
  register: file_info

- debug:
    msg: "{{ file_info }}"

- name: Install minio client
  shell: |
    curl https://dl.min.io/client/mc/release/linux-amd64/mc --create-dirs -o {{ ansible_env.PWD }}/minio-binaries/mc
    chmod +x {{ ansible_env.PWD }}/minio-binaries/mc
    {{ ansible_env.PWD }}/minio-binaries/mc alias set minio http://storage.agileops.int {{ key }} {{ value }}
  when: not file_info.stat.exists

- name: Get list of filenames from URLs
  command: "{{ ansible_env.PWD }}/minio-binaries/mc ls minio/agileops"
  register: result

- name: Get Confluence package names from stdout_lines
  set_fact:
    list_packages: "{{ result.stdout_lines | map('split', ' ') | map('last') | list }}"

- name: Download package
  include_tasks: download-package.yml
  when: confluence_package not in list_packages

- name: Copy package from minio server
  register: cp_cf_package
  until: cp_cf_package is succeeded
  retries: 5
  delay: 15
  shell: |
    {{ ansible_env.PWD }}/minio-binaries/mc cp minio/agileops/{{ confluence_package }} {{ ansible_env.PWD }}/confluence_installer
    chmod 755 {{ ansible_env.PWD }}/confluence_installer

# - name: confluence | Download package
#   get_url:
#     dest: "{{ ansible_env.PWD }}/confluence_installer"
#     url: "{{ confluence_url }}"
#     mode: '0755'

- name: confluence | Update response
  template:
    src: response.varfile.j2
    dest: "/tmp/response.varfile"
    mode: 0644
  tags:
    - install

- name: Get stats of the FS object
  ansible.builtin.stat:
    path: "{{ confluence_installation_dir }}"
  register: p

- name: confluence | Installation
  become: true
  shell: "{{ ansible_env.PWD }}/confluence_installer -q -varfile /tmp/response.varfile"
  when: p.stat.isdir is not defined

- name: confluence | Config
  include_tasks: config.yml
  tags:
    - config

# - name: Import startup argument
#   command: sed -i '1s/^/CATALINA_OPTS="{{ item }} ${CATALINA_OPTS}"\n/' {{ confluence_installation_dir }}/bin/setenv.sh
#   with_items: "{{ startup_arguments }}"

# - name: confluence | Configuring service
#   ansible.builtin.service:
#     name: confluence
#     state: restarted

- name: confluence | Allow all access to confluence port
  ufw:
    rule: allow
    port: "{{ confluence_connector_port }}"
    proto: tcp

# register domain

# - name: Register domain
#   include_role:
#     name: nginx-proxy
#   vars:
#     register_domain: "{{ confluence_domain }}"
#     forward_port: "{{ confluence_connector_port }}"
#     forward_host: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"




    
