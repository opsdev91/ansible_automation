export AWS_REGION:=ap-southeast-1
export AWS_PROFILE:=default
ACCOUNT_ID=$(shell aws sts get-caller-identity --profile ${AWS_PROFILE}| jq -r '.Account')
TF_STATE_S3_BUCKET=tf-states-${AWS_REGION}-${ACCOUNT_ID}
TF_STATE_DYNAMODB_TABLE=tf-states-${AWS_REGION}-${ACCOUNT_ID}

.PHONY: init
init: 
	@echo "dynamodb table: $(TF_STATE_DYNAMODB_TABLE)"
	@echo "bucket name: $(TF_STATE_S3_BUCKET)"
	aws s3api create-bucket --bucket ${TF_STATE_S3_BUCKET} --profile ${AWS_PROFILE} --region ${AWS_REGION} --acl private 2>/dev/null || true
	aws s3api put-bucket-versioning --bucket ${TF_STATE_S3_BUCKET} --profile ${AWS_PROFILE} --region ${AWS_REGION} --versioning-configuration Status=Enabled 2>/dev/null || true
	aws s3api put-bucket-acl --bucket ${TF_STATE_S3_BUCKET} --profile ${AWS_PROFILE} --region ${AWS_REGION} --acl private || true
	aws s3api put-public-access-block --bucket ${TF_STATE_S3_BUCKET} --profile ${AWS_PROFILE} --region ${AWS_REGION} --public-access-block-configuration "BlockPublicAcls=true,IgnorePublicAcls=true,BlockPublicPolicy=true,RestrictPublicBuckets=true" || true
	aws s3api put-bucket-encryption --bucket ${TF_STATE_S3_BUCKET} --profile ${AWS_PROFILE} --region ${AWS_REGION} --server-side-encryption-configuration '{"Rules": [{"ApplyServerSideEncryptionByDefault": {"SSEAlgorithm": "AES256"}}]}' || true

	aws dynamodb create-table --table-name ${TF_STATE_DYNAMODB_TABLE} --profile ${AWS_PROFILE} --region ${AWS_REGION} --key-schema AttributeName=LockID,KeyType=HASH --attribute-definitions AttributeName=LockID,AttributeType=S --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1 2>/dev/null || true

	terraform init -reconfigure -backend-config="region=${AWS_REGION}" \
								-backend-config="bucket=${TF_STATE_S3_BUCKET}" \
								-backend-config="dynamodb_table=${TF_STATE_DYNAMODB_TABLE}" \
								-backend-config="key={{ root_email }}/terraform.tfstate"

.PHONY: validate
validate:
	terraform validate

.PHONY: plan
plan: 
	terraform plan 

.PHONY: apply
apply: 
	terraform apply \
	-auto-approve

.PHONY: destroy
destroy: 
	terraform destroy \
	-auto-approve


